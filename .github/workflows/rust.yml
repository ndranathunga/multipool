name: Rust CI

on:
  push:
    branches:
      - "**" # Run for all branches on commit
  pull_request:
    branches:
      - "**" # Run for all pull requests

jobs:
  msrv:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest] # Test on both Linux and Windows
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: 1.78.0 # Minimum Supported Rust Version (MSRV)
          override: true

      - name: Build and Test
        run: |
          cargo build --release
          cargo test

      - name: Create Benchmark Results Directory
        run: |
          mkdir -p bench_results 
          touch bench_results/results.json

      - name: Run Benchmarks
        run: cargo bench --features bench -- --output-format=json > bench_results/results.json

      - name: Upload Benchmark Results
        uses: actions/upload-artifact@v3
        with:
          name: benchmark-results
          path: bench_results/results.json

      - name: Post Benchmark Results on Pull Requests
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v6
        with:
          script: |
            const fs = require('fs');
            const results = fs.readFileSync('bench_results/results.json', 'utf8');
            const benchmarks = JSON.parse(results);

            // Create a Markdown table
            const header = `| Benchmark Name | Value | Unit |\n|---|---|---|`;
            const rows = benchmarks.map(b => `| ${b.name} | ${b.value} | ${b.unit} |`).join('\n');
            const table = `${header}\n${rows}`;

            // Post comment to PR
            const comment = `### Benchmark Results\n${table}`;
            github.rest.issues.createComment({
              issue_number: context.payload.pull_request.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });

      - name: Display Benchmark Results in Logs
        if: github.event_name != 'pull_request'
        run: |
          echo "### Benchmark Results"
          cat bench_results/results.json

  latest:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2

      - name: Install Latest Stable Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Build and Test
        run: |
          cargo build --release
          cargo test

      - name: Create Benchmark Results Directory
        run: |
          mkdir -p bench_results 
          touch bench_results/results.json

      - name: Run Benchmarks
        run: cargo bench --features bench -- --output-format=json > bench_results/results.json

      - name: Upload Benchmark Results
        uses: actions/upload-artifact@v3
        with:
          name: benchmark-results
          path: bench_results/results.json

      - name: Post Benchmark Results on Pull Requests
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v6
        with:
          script: |
            const fs = require('fs');
            const results = fs.readFileSync('bench_results/results.json', 'utf8');
            const benchmarks = JSON.parse(results);

            // Create a Markdown table
            const header = `| Benchmark Name | Value | Unit |\n|---|---|---|`;
            const rows = benchmarks.map(b => `| ${b.name} | ${b.value} | ${b.unit} |`).join('\n');
            const table = `${header}\n${rows}`;

            // Post comment to PR
            const comment = `### Benchmark Results\n${table}`;
            github.rest.issues.createComment({
              issue_number: context.payload.pull_request.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });

      - name: Display Benchmark Results in Logs
        if: github.event_name != 'pull_request'
        run: |
          echo "### Benchmark Results"
          cat bench_results/results.json
